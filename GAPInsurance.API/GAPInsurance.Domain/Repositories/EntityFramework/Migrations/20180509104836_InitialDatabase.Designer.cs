// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace GAPInsurance.Domain.Repositories.EntityFramework.Migrations {
  [DbContext(typeof(GAPInsuranceDBContext))]
  [Migration("20180509104836_InitialDatabase")]
  partial class InitialDatabase {
    protected override void BuildTargetModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
          .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

      modelBuilder.Entity("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBClient", b => {
        b.Property<Guid>("Id")
            .ValueGeneratedOnAdd();

        b.Property<string>("Name");

        b.HasKey("Id");

        b.ToTable("Clients");
      });

      modelBuilder.Entity("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBClientCoverage", b => {
        b.Property<Guid>("PolicyId");

        b.Property<Guid>("ClientId");

        b.HasKey("PolicyId", "ClientId");

        b.HasIndex("ClientId");

        b.ToTable("ClientPolicies");
      });

      modelBuilder.Entity("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBCoveragePercentage", b => {
        b.Property<Guid>("PolicyId");

        b.Property<int>("Coverage");

        b.Property<float>("Percentage");

        b.HasKey("PolicyId", "Coverage");

        b.HasAlternateKey("Coverage", "PolicyId");

        b.ToTable("PolicyCoverages");
      });

      modelBuilder.Entity("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBInsurancePolicy", b => {
        b.Property<Guid>("Id")
            .ValueGeneratedOnAdd();

        b.Property<int>("CoverageLengthInMonths");

        b.Property<DateTime>("CoverageStartDate");

        b.Property<string>("Description");

        b.Property<int>("InsuredRiskLevel");

        b.Property<string>("Name");

        b.Property<float>("PremiumCostInDollars");

        b.HasKey("Id");

        b.ToTable("Policies");
      });

      modelBuilder.Entity("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBClientCoverage", b => {
        b.HasOne("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBClient", "Client")
            .WithMany("ClientCoverages")
            .HasForeignKey("ClientId")
            .OnDelete(DeleteBehavior.Cascade);

        b.HasOne("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBInsurancePolicy", "Policy")
            .WithMany("ClientCoverages")
            .HasForeignKey("PolicyId")
            .OnDelete(DeleteBehavior.Cascade);
      });

      modelBuilder.Entity("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBCoveragePercentage", b => {
        b.HasOne("GAPInsurance.Domain.Repositories.EntityFramework.Models.DBInsurancePolicy", "Policy")
            .WithMany("CoveragePercentages")
            .HasForeignKey("PolicyId")
            .OnDelete(DeleteBehavior.Cascade);
      });
#pragma warning restore 612, 618
    }
  }
}
